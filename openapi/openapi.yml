openapi: 3.0.3
info:
  title: Pet manager
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /pets/newpet:
    post:
      summary: Register new pet
      operationId: createNewPet
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/PetCreateUpdateRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetResponse'
  /pets:
    get:
      summary: List all pets
      operationId: getAllPets
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/PetResponse'
  /pets/{petId}:
    get:
      summary: Find pet by ID
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
    delete:
      summary: Delete pet by ID
      operationId: deletePetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
    put:
      summary: Updates a pet in the store
      operationId: updatePet
      parameters:
        - name: petId
          in: path
          description: ID of pet that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/PetCreateUpdateRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetResponse'
        '400':
          description: Invalid ID supplied
components:
  schemas:
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    PetResponse:
      required:
        - id
        - name
        - race
        - imageURL
        - textdescription
        - age
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: doggie
        race:
          type: string
        imageURL:
          type: string
        textdescription:
          type: string
          example: My pet is very cute.
        age:
          type: int64
          example: 2
    PetCreateUpdateRequest:
      required:
        - name
        - raceid
        - age
        - textdescription
        - imageURL
      type: object
      properties:
        name:
          type: string
          example: doggie
        raceid:
          type: int64
        age:
          type: int64
          example: 2
        textdescription:
          type: string
          example: My pet is very cute.
        imageURL:
          type: string
        